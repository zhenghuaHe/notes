
防火墙迁徙：
在.net表增加：
-A PREROUTING -i eth1 -p tcp -m tcp --dport 60001 -j DNAT --to-destination 47.100.238.223:60001
-A PREROUTING -i eth1 -p udp -m udp --dport 60001 -j DNAT --to-destination 47.100.238.223:60001


Mysql数据的迁徙：
$ cat iot/config.json
{
	"eventLoopPoolSize":24,
	"workerPoolSize":24,
	"http.instance":4,
	"http.port":80,
	"socket.instance":2,
	"socket.port":60001,


	"mysql.host":"182.131.21.66",
	"mysql.port":3306,
	"mysql.database":"iot",
	"mysql.username":"iot",
	"mysql.password":"afaFR63dCTV2lczWkmn",
	"mysql.maxPoolSize":20,
	"mysql.queryTimeout":10000,
	"mysql.connectTimeout":1000,

	"aaa.port":60001
}


创建与还原数据卷：
CREATE DATABASE iot;

grant all privileges on iot.* to  iot@"%" identified by 'afaFR63dCTV2lczWkmn';
flush privileges;


mysqldump -h218.6.173.7 -P43306 -uroot -pzjwl@IRMKYBH1jKh1F --set-gtid-purged=OFF --no-data  iot|gzip > iot_create_info_20181108.sql.gz
mysqldump -h218.6.173.7 -P43306 -uroot -pzjwl@IRMKYBH1jKh1F --set-gtid-purged=OFF --no-create-info  iot|gzip > iot_data_20181108.sql.gz


 mysqldump -ucloudthings -psojdrFmLikWT6hFpxAaB --set-gtid-purged=OFF --no-create-info  cloudthings|gzip > cloudthings_data_1113.sql.gz
grant all privileges on cloudthings.* to  cloudthings@"%" identified by 'sojdrFmLikWT6hFpxAaB';
flush privileges;


gzip -d iot_create_info_20181108.sql.gz
gzip -d iot_data_20181108.sql.gz

mysql -h rm-uf6qw4210ysqu7v10.mysql.rds.aliyuncs.com -umwteck -pA6vn4WffbG15ueUuz9Yr1Zdc iot < iot_create_info_20181108.sql
mysql -h rm-uf6qw4210ysqu7v10.mysql.rds.aliyuncs.com -umwteck -pA6vn4WffbG15ueUuz9Yr1Zdc iot < iot_data_20181108.sql



nginx配置文件的迁徙：
$ cat /etc/nginx/nginx.conf

stream {
    server {
        listen 1063;
        proxy_pass websocket;
    }

    upstream websocket {
    #    server 182.131.21.66:1061;
        server 47.100.238.223:1063;
    }
}


ps.注意个别地区新域名尚未生效，需要把老域名指到新域名的问题

日志格式：
log_format  　　　　　postdata  '$host $server_port $remote_addr "$upstream_addr" $remote_user [$time_local] "$request" '
                  '$status "$upstream_status" $request_time "$upstream_response_time" $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for" "$request_body"';

$ cat /etc/nginx/conf.d/v1.api.tsdnano.2012iot.com.conf
server {
    listen    80;
    server_name v1.api.tsdnano.2012iot.com;
    root /usr/share/nginx/html;
    access_log  /var/log/nginx/v1.api.tsdnano.2012iot.com.log  main;

    location / {
       if ($request_method = POST) {
           access_log /var/log/nginx/v1.api.tsdnano.2012iot.com_post.log  postdata;
       }

        proxy_pass    http://nano_alarm;
    }
}
upstream nano_alarm{
#      server 182.131.21.66:5580 ;
      server 218.6.173.7:5580;
}
