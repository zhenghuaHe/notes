== nginx的配置（负载+反代）

[source,text]
----
   nginx的配置一般比较简单，网上文档很多，照着做基本能成功。

   常见的就是基于http协议的负载和反代，还有基于tcp协议的负载和代理。
----

.基于http协议的负载和反代和缓存的部分代码：
ps：nginx.conf主配置文件的http段
[source,bash]
----
   proxy_cache_path /usr/share/nginx/proxy_cache levels=1:1:1 keys_zone=cache:20m max_size=1g;
   # 上述含义为：缓rsync在使用中往往会报错误，综合自己亲身经验，总结几条错误的解决方案（存路径、缓存目录的层级、映射的名称及大小、最大缓存量

   proxy_set_header Host $host;
   proxy_set_header X-Real-IP $remote_addr;  #传递client ip给后端服务器
   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

server段：
#反代
location / {
    root   /usr/share/nginx/html;
    index  index.html index.htm;
    proxy_pass http://websrvs;
}

add_header X-Via $server_addr;
#动静分离
location ~* \.(jpg|gif|png)$ {
     proxy_pass http://172.16.2.119;
     proxy_cache cache;
     proxy_cache_key $request_uri;
     proxy_cache_valid 200 301 302 1h;
     proxy_cache_valid any 1m;
}

#负载
   upstream websrvs {
   #负载算法：ip_hash/权重(weight)/fair(第三方，谁响应快选谁)/url_hash/
             server 172.16.3.8 weight=2;
             server 172.16.3.19 weight=3;
   }

基于tcp协议的反代：
主配置文件nginx.conf段落：
include /usr/local/nginx-1.6.3/conf/tcp_proxy.conf;

#状态信息模块
location /nginx_status {
        stub_status on;
            access_log  logs/nginx_status.log;
        allow 127.0.0.1;
        deny all;
    }
----

.基于tcp协议的配置：
[source,bash]
----

    include /usr/local/nginx-1.6.3/conf/tcp_proxy.conf;


    tcp {
        upstream mysql {
            server 10.207.238.66:3306;
            server 10.207.238.67:3306;

     #健康检查
            check interval=3000 rise=2 fall=5 timeout=1000;
            #check interval=3000 rise=2 fall=5 timeout=1000
            #check interval=3000 rise=2 fall=5 timeout=1000
            #check_http_send "GET /HTTP/1.0\r\n\r\n";
            #check_http_expect_alive http_2xxhttp_3xx;
        }

        server {
    listen 3307;
            proxy_pass mysql;
        }
    }
----
.注释：
[source,text]
----
    check interval 健康检查，单位是毫秒
    rise 检查几次正常后，将reslserver加入以负载列表中
    fall 检查几次失败后，摘除realserver
    timeout 检查超时时间，单位许毫秒
    具体可查看nginx_tcp_proxy_module-master/README,很详细。
    验证tcp协议的反代成功可以看日志

   参考文档：
   http://blog.51cto.com/1992tao
----
